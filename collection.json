{
	"info": {
		"_postman_id": "37c6b640-ac14-4bf2-8b61-e53fc3597fbe",
		"name": "To-do List Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User related requests",
			"item": [
				{
					"name": "Registering one new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2f61318-b183-475a-a460-d90d6d6ef070",
								"exec": [
									"// we got random email value after this request",
									"// we need to extract that random email int {{userEmail}} ",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"userEmail\", jsonData.user.email)",
									"pm.environment.set(\"userRegistrationToken, jsonData.\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"Soccer910\",\n\t\"age\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5001122f-6742-4d83-a12b-ddf47a45ad27",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userSessionToken\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"muh.nurali43@gmail.com\",\n\t\"password\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info who is currently logged in",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout a user currently in session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78c46cef-2ad4-40cd-a7e5-b36be33f590d",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userSessionToken\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/logout",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update one user profile information",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "110d5361-d4fb-4b0f-b70b-0d81bbfa4d30",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userEmail\", jsonData.user.email);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 27\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "User changes profile picture",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users profile picture",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Profie Picture",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Delete one registered user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get a registered user information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task related requests",
			"item": [
				{
					"name": "Registering one new user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fd97a88-e2f2-41c8-85e8-669cc26601dd",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"taskID\",jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"Journey21345\",\n\t\"age\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a User Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac3221cb-45db-4aee-9543-be7d88ec83eb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n\t\"email\": {{$randomEmail}},\n\t\"password\": \"Journey21345\",\n\t\"age\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a single to-do task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"{{$randomLoremParagraph}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all the to-do of a user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976ff09f-9a04-4c13-a712-ad226495d730",
								"exec": [
									"// 1. grab the json data from response body",
									"var jsonData = pm.response.json();",
									"// 2. You target the data you want",
									"var idOfTask = jsonData.data[0]._id;",
									"// 3. Set the extracted ID to our Variable in environment",
									"pm.environment.set(\"taskID\", idOfTask);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Task ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48aa6e79-04ca-40d1-a552-258761b5e6c4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a task with complete status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get task do user that is not completed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get Task by Completed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get task by pagination",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Delete task by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "https://swapi.dev/spi/people/1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.dev/spi/people/1",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						"spi",
						"people",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}